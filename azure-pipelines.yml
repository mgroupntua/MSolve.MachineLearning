# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- develop

pool:
  vmImage: 'windows-2019'

variables:
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  Version: '1.0.$(Build.BuildId)'
  Major: '1'
  Minor: '0'
  Patch: '$(Build.BuildId)'

steps:
- task: DotNetCoreCLI@2
  name: dotnetRestore
  displayName: "Restore nugets"
  inputs:
    command: 'restore'
    verbosityRestore: 'Normal'
    feedRestore: 'MSolve-Nugets'

- task: DotNetCoreCLI@2
  name: dotnetBuild
  displayName: "Build projects"
  inputs:
    command: 'build'
    arguments: '-p:Version=$(Major).$(Minor).$(Build.BuildId)'
    verbosityPack: 'Minimal'
    configuration: '$(buildConfiguration)'

- task: DotNetCoreCLI@2
  name: dotnetPack
  displayName: "Packages new nugets"
  inputs:
    command: 'pack'
    versioningScheme: 'byEnvVar'
    versionEnvVar: 'Version'
    verbosityPack: 'Minimal'

- task: PublishBuildArtifacts@1
  name: publishToFeed
  displayName: "Publishes to pipeline artifacts"
  inputs:
    ArtifactName: 'drop'

- task: DotNetCoreCLI@2
  name: dotnetPushNuget
  displayName: "Push nugets to feed"
  inputs:
    command: 'push'
    packagesToPush: '$(build.artifactStagingDirectory)/*.nupkg'
    verbosityPack: 'Minimal'
    feedPublish: 'MSolve-Nugets'

- task: DotNetCoreCLI@2
  enabled: false
  name: dotnetPushSymbol
  displayName: "Publishes symbol nugets"
  inputs:
    command: 'push'
    searchPatternPush: '$(Build.ArtifactStagingDirectory)/*.snupkg'
    feedPublish: 'MSolve-Nugets'
